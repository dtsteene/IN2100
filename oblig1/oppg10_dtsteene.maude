--- oblig 1
--- Jobber med Emma Storberg
in imports.maude . 
in oppg9_dtsteene.maude .


fmod LIST-NAT1 is
    protecting NAT1 . protecting BOOLEAN . 
    sort List .
    op nil : -> List [ctor] .
    op __ : List Nat -> List [ctor] . 
    op concat : List List -> List .     *** Concatenate two lists
    op empty? : List -> Boolean .       *** Is the list empty?
    op rest : List -> List .            *** Remove first element.
    op last : List -> Nat .             *** Last element
    op reverse : List -> List .         *** Reverse list

    vars N : Nat .    vars L L' : List .

    --- concat
    eq concat(L, nil) = L .
    eq concat(L, L' N) = concat(L, L') N .

    --- empty? 
    eq empty?(nil) = true .
    eq empty?(L) = false . 


    --- rest
    eq rest(nil) = nil .
    eq rest(nil N) = nil .
    eq rest(L N) = rest(L) N .

    --- last
    eq last (L N) = N .
    eq last (nil) = 0 .

    --- reverse
    eq reverse(nil) = nil . --- base case
    eq reverse(L N) = concat(nil N, reverse(L)) . --- move to the back until base case


endfm